<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Study on Spid3r&#39;s Blog</title>
        <link>/categories/study/</link>
        <description>Recent content in Study on Spid3r&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Tue, 30 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="/categories/study/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Kali Linux VPS for Free: A Segfault Tutorial That Makes It Possible</title>
        <link>/post/kali_linux/</link>
        <pubDate>Tue, 30 Apr 2024 00:00:00 +0000</pubDate>
        
        <guid>/post/kali_linux/</guid>
        <description>&lt;img src="/post/kali_linux/featured.png" alt="Featured image of post Kali Linux VPS for Free: A Segfault Tutorial That Makes It Possible" /&gt;&lt;p&gt;&lt;em&gt;Original Article in &lt;strong&gt;Medium&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://sondt1337.medium.com/kali-linux-vps-for-free-it-appears-so-segfault-tutorial-6c9dd0642ff0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://sondt1337.medium.com/kali-linux-vps-for-free-it-appears-so-segfault-tutorial-6c9dd0642ff0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Segfault&lt;/strong&gt;, created by The Hacker’s Choice, is a complimentary application for Cyber Security Researcher. It provides an unlimited server with Root access. With each new server that is generated, SSH connection is established for communal use.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image.png&#34;
	width=&#34;1100&#34;
	height=&#34;77&#34;
	srcset=&#34;/post/kali_linux/image_hu5374e3d759213a534bd313868ce2a7a0_73078_480x0_resize_box_3.png 480w, /post/kali_linux/image_hu5374e3d759213a534bd313868ce2a7a0_73078_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH Connection&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1428&#34;
		data-flex-basis=&#34;3428px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;login-server&#34;&gt;LOGIN Server&lt;/h2&gt;
&lt;p&gt;To connect to Segfault via SSH, use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh root@segfault.net &lt;span class=&#34;c1&#34;&gt;# The password is &amp;#39;segfault&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;When initially connecting to Segfault to open a root and SSH server, a 60-second wait is required. However, this duration is not typical for subsequent connections (probably less).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-1.png&#34;
	width=&#34;647&#34;
	height=&#34;426&#34;
	srcset=&#34;/post/kali_linux/image-1_hu5c0be1c2c610ae038291187be722adef_260548_480x0_resize_box_3.png 480w, /post/kali_linux/image-1_hu5c0be1c2c610ae038291187be722adef_260548_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;151&#34;
		data-flex-basis=&#34;364px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once successfully connected to the server, it will provide details such as &lt;code&gt;SSH&lt;/code&gt; and &lt;code&gt;IP address&lt;/code&gt;. (It’s important to save this information for future reference.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-2.png&#34;
	width=&#34;1215&#34;
	height=&#34;773&#34;
	srcset=&#34;/post/kali_linux/image-2_hud7fb940c09e090bb9cf7b93bdef4b9e7_451163_480x0_resize_box_3.png 480w, /post/kali_linux/image-2_hud7fb940c09e090bb9cf7b93bdef4b9e7_451163_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Connection info&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;377px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Later, to log in again, simply execute the SSH command provided below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-3.png&#34;
	width=&#34;1320&#34;
	height=&#34;217&#34;
	srcset=&#34;/post/kali_linux/image-3_hu76e1aba48b89272f1cccccea9e04db4e_273031_480x0_resize_box_3.png 480w, /post/kali_linux/image-3_hu76e1aba48b89272f1cccccea9e04db4e_273031_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH COMMAND&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;608&#34;
		data-flex-basis=&#34;1459px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh -o &lt;span class=&#34;s2&#34;&gt;&amp;#34;SetEnv SECRET=YOUR_KEY_PRIVATE&amp;#34;&lt;/span&gt; root@lulz.segfault.net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Once logged in, this Kali server can be utilized as a virtual machine equipped with a comprehensive suite of tools for security and networking, … (&lt;a class=&#34;link&#34; href=&#34;https://www.thc.org/segfault/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Segfault’s homepage&lt;/a&gt; for more details).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-4.png&#34;
	width=&#34;686&#34;
	height=&#34;325&#34;
	srcset=&#34;/post/kali_linux/image-4_hu38c0f0498fd0118b4e6a9864aec0c86a_223596_480x0_resize_box_3.png 480w, /post/kali_linux/image-4_hu38c0f0498fd0118b4e6a9864aec0c86a_223596_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Working with Kali Linux VPS&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;506px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To log out of the server, simply use the &lt;code&gt;exit&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-5.png&#34;
	width=&#34;889&#34;
	height=&#34;173&#34;
	srcset=&#34;/post/kali_linux/image-5_hu46769a6d7a14dfc8fabe8c624c5303c7_129294_480x0_resize_box_3.png 480w, /post/kali_linux/image-5_hu46769a6d7a14dfc8fabe8c624c5303c7_129294_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;513&#34;
		data-flex-basis=&#34;1233px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;tunnel-server---argo-tunnel-cloudflare-tunnel&#34;&gt;TUNNEL Server - Argo Tunnel (Cloudflare Tunnel)&lt;/h2&gt;
&lt;p&gt;Although the server we have is nearly identical to a real Kali Linux virtual machine, it can initiate connections from the inside, but external connections cannot reach it using common protocols like HTTP, TCP, etc. For this, I will need to utilize a powerful Cloudflare feature called Tunnel.&lt;/p&gt;
&lt;p&gt;Initially, you must establish a tunnel from Cloudflare to the Kali Linux server using &lt;a class=&#34;link&#34; href=&#34;https://www.cloudflare.com/learning/security/glossary/what-is-zero-trust/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Zero Trust&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;create-a-tunnel&#34;&gt;Create a tunnel&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-6.png&#34;
	width=&#34;1871&#34;
	height=&#34;935&#34;
	srcset=&#34;/post/kali_linux/image-6_hu7e71689e880715d9d20063778989975b_306195_480x0_resize_box_3.png 480w, /post/kali_linux/image-6_hu7e71689e880715d9d20063778989975b_306195_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Create a tunnel from Cloudflare&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;480px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;name-your-tunnel&#34;&gt;Name your tunnel&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-7.png&#34;
	width=&#34;1096&#34;
	height=&#34;243&#34;
	srcset=&#34;/post/kali_linux/image-7_hu89c87f5eb64d12a77c28d64f16ab2def_57525_480x0_resize_box_3.png 480w, /post/kali_linux/image-7_hu89c87f5eb64d12a77c28d64f16ab2def_57525_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Name your tunnel&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;451&#34;
		data-flex-basis=&#34;1082px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;install-and-run-connectors&#34;&gt;Install and run connectors&lt;/h3&gt;
&lt;p&gt;In the “Choose your environment” options, select Debian — 64-bit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-8.png&#34;
	width=&#34;1025&#34;
	height=&#34;280&#34;
	srcset=&#34;/post/kali_linux/image-8_hu3949ca5fa27f2357d7f214755f9bd2dd_91690_480x0_resize_box_3.png 480w, /post/kali_linux/image-8_hu3949ca5fa27f2357d7f214755f9bd2dd_91690_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;366&#34;
		data-flex-basis=&#34;878px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-9.png&#34;
	width=&#34;1493&#34;
	height=&#34;324&#34;
	srcset=&#34;/post/kali_linux/image-9_hu123009d113363bae0789c16878248bf6_192787_480x0_resize_box_3.png 480w, /post/kali_linux/image-9_hu123009d113363bae0789c16878248bf6_192787_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;460&#34;
		data-flex-basis=&#34;1105px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i cloudflared.deb 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo cloudflared service install &lt;span class=&#34;s2&#34;&gt;&amp;#34;YOUR_TOKEN_CLOUDFLARE&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Replace YOUR_TOKEN_CLOUDFLARE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Upon a successful connection, Connectors will display both ID and Status.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-10.png&#34;
	width=&#34;956&#34;
	height=&#34;194&#34;
	srcset=&#34;/post/kali_linux/image-10_hu926456ad1a2e9911bdb5c15c31793491_35592_480x0_resize_box_3.png 480w, /post/kali_linux/image-10_hu926456ad1a2e9911bdb5c15c31793491_35592_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;492&#34;
		data-flex-basis=&#34;1182px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;route-traffic&#34;&gt;Route Traffic&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-11.png&#34;
	width=&#34;1582&#34;
	height=&#34;832&#34;
	srcset=&#34;/post/kali_linux/image-11_hu588261e5a4b73d38b6d8d0dd774ff57d_268074_480x0_resize_box_3.png 480w, /post/kali_linux/image-11_hu588261e5a4b73d38b6d8d0dd774ff57d_268074_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Config Localhost &amp; Domain&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In “Route Traffic,” you must fill in the &lt;strong&gt;Domain&lt;/strong&gt; (at least one domain is required) and the method + URL (localhost).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;http.server&lt;/code&gt; in background to tunnel from machine to cloudflare.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-12.png&#34;
	width=&#34;507&#34;
	height=&#34;81&#34;
	srcset=&#34;/post/kali_linux/image-12_hu56f7b2bfc8731ab5583ebb4c43c7acdc_33881_480x0_resize_box_3.png 480w, /post/kali_linux/image-12_hu56f7b2bfc8731ab5583ebb4c43c7acdc_33881_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;625&#34;
		data-flex-basis=&#34;1502px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When the http.server is running in the background, a Cloudflare tunnel can be configured to a domain, allowing access via: &lt;a class=&#34;link&#34; href=&#34;https://segfault.sondt.id.vn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://segfault.sondt.id.vn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-13.png&#34;
	width=&#34;405&#34;
	height=&#34;374&#34;
	srcset=&#34;/post/kali_linux/image-13_hu23d6530f6a64f50fa04181b1b8c14c1d_56238_480x0_resize_box_3.png 480w, /post/kali_linux/image-13_hu23d6530f6a64f50fa04181b1b8c14c1d_56238_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;108&#34;
		data-flex-basis=&#34;259px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(If you’re still able to access this page, it indicates that the article remains accurate. LOL)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can create an HTML file in the background to display a welcome page :&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-14.png&#34;
	width=&#34;1904&#34;
	height=&#34;922&#34;
	srcset=&#34;/post/kali_linux/image-14_hu06b4a00d0c73163485a2fa05619d4b2a_179411_480x0_resize_box_3.png 480w, /post/kali_linux/image-14_hu06b4a00d0c73163485a2fa05619d4b2a_179411_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Welcome Page&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;495px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;uptime-server&#34;&gt;UPTIME Server&lt;/h2&gt;
&lt;p&gt;However, if the requirement is to establish a connection that remains active indefinitely, allowing applications to run continuously, what should be done?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-15.png&#34;
	width=&#34;1037&#34;
	height=&#34;326&#34;
	srcset=&#34;/post/kali_linux/image-15_huc3a671bac7028914f008a797f44bcf9c_354088_480x0_resize_box_3.png 480w, /post/kali_linux/image-15_huc3a671bac7028914f008a797f44bcf9c_354088_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;318&#34;
		data-flex-basis=&#34;763px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;According to the segfault announcement, the server will remain up as long as you are logged into the Segfault. This means your progress will be preserved as long as you maintain an SSH connection to segfault.net.&lt;/p&gt;
&lt;p&gt;So we need to make something that can automatically connect “ssh” to the segfault server.&lt;/p&gt;
&lt;h3 id=&#34;github-actions&#34;&gt;Github Actions&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/actions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Actions&lt;/a&gt; is a complimentary service offered by GitHub that facilitates the automation of the CI/CD process. It enables users to create workflows that automate tasks within the software development lifecycle.&lt;/p&gt;
&lt;p&gt;When you create a repository in Github, you can choose Actions to start Github Actions, choose the simple workflow.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-16.png&#34;
	width=&#34;1261&#34;
	height=&#34;551&#34;
	srcset=&#34;/post/kali_linux/image-16_hu4d96109f6120bfc70d56bd620f4f4240_143957_480x0_resize_box_3.png 480w, /post/kali_linux/image-16_hu4d96109f6120bfc70d56bd620f4f4240_143957_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;228&#34;
		data-flex-basis=&#34;549px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-17.png&#34;
	width=&#34;1014&#34;
	height=&#34;450&#34;
	srcset=&#34;/post/kali_linux/image-17_hu35323aa266f8a005aeb187b387e27bce_137180_480x0_resize_box_3.png 480w, /post/kali_linux/image-17_hu35323aa266f8a005aeb187b387e27bce_137180_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;225&#34;
		data-flex-basis=&#34;540px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I have created a &lt;strong&gt;YAML script&lt;/strong&gt; to automate the process of repeatedly establishing an SSH connection with a set interval.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;SEGFAULT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;pull_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;cron&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*/20 * * * *&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Restart each 20 minutes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout code&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Install sshpass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sudo apt-get install -y sshpass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Connect to SSH and run command&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# automatic connect ssh from github actions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;          sshpass -p &amp;#34;segfault&amp;#34; ssh -o &amp;#34;SetEnv SECRET=YOUR_KEY&amp;#34; -o &amp;#34;StrictHostKeyChecking=no&amp;#34; root@lulz.segfault.net &amp;#34;ls&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This rules will make automatically connect to SSH every 20 minutes, making the SSH connection process uninterrupted for too long.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/kali_linux/image-18.png&#34;
	width=&#34;1896&#34;
	height=&#34;901&#34;
	srcset=&#34;/post/kali_linux/image-18_hu94fa51b58243f62e8e50fc56199eaa27_289834_480x0_resize_box_3.png 480w, /post/kali_linux/image-18_hu94fa51b58243f62e8e50fc56199eaa27_289834_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Connect to SSH and run command&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;505px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;We have successfully established a continuous SSH connection to the server, ensuring it remains active for our needs.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;CONCLUSION&lt;/h2&gt;
&lt;p&gt;This article demonstrates how to establish a connection to a Segfault, create a tunnel from the Segfault server to an external destination with domain, and maintain it with 100% uptime.&lt;/p&gt;
&lt;p&gt;If you find this guide helpful, please consider sharing it with your friends.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thank you for visting!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Buy me a coffee ☕: &lt;a class=&#34;link&#34; href=&#34;https://www.buymeacoffee.com/spid3r&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.buymeacoffee.com/spid3r&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to build &amp; deploy Flask project on Glitch?</title>
        <link>/p/how-to-build-deploy-flask-project-on-glitch/</link>
        <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>/p/how-to-build-deploy-flask-project-on-glitch/</guid>
        <description>&lt;img src="/p/how-to-build-deploy-flask-project-on-glitch/featured.png" alt="Featured image of post How to build &amp; deploy Flask project on Glitch?" /&gt;&lt;h2 id=&#34;overview-flask&#34;&gt;Overview (Flask)&lt;/h2&gt;
&lt;p&gt;Perhaps everyone is familiar with &lt;a class=&#34;link&#34; href=&#34;https://flask.palletsprojects.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flask&lt;/a&gt;, a framework from Python. Flask depends on the Werkzeug WSGI toolkit, the Jinja sample engine,&amp;hellip; to build BE &amp;amp; FE application.&lt;/p&gt;
&lt;h3 id=&#34;structure&#34;&gt;Structure&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;my_flask_project/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── app.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── templates/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── index.html
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── static/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── css/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── style.css
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── js/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── script.js
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │   ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   │
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── img/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│       ├── logo.png
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│       ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── models/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── user.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── routes/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── user_routes.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── auth_routes.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│   ├── ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;│
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── config.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;app.py&lt;/code&gt;: This is the main entry point of your Flask application where you create an instance of the Flask class and define routes and views.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;templates/&lt;/code&gt;: This directory contains HTML templates used for rendering dynamic content using the Jinja2 templating engine. Each template file represents a different page or component of your web application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;static/&lt;/code&gt;: This directory is used for storing static files such as CSS stylesheets, JavaScript files, images, etc. These files are served directly to the client without any processing by Flask.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;models/&lt;/code&gt;: If your application involves working with databases or data models, you can create a directory to store your database models or data access code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;routes/&lt;/code&gt;: It&amp;rsquo;s common practice to organize your route handlers into separate files within a directory. For example, you might have a user_routes.py file for handling user-related routes, an auth_routes.py file for authentication routes, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;config.py&lt;/code&gt;: This file contains configuration settings for your Flask application such as database connection strings, secret keys, etc. Separating configuration from your main application logic helps in keeping your code modular and maintainable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;requirements.txt&lt;/code&gt;: This file lists all the Python dependencies required by your Flask application. You can generate this file using pip freeze &amp;gt; requirements.txt after installing all necessary packages.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;build&#34;&gt;Build&lt;/h3&gt;
&lt;p&gt;To build a Flask project, follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You need to install flask by adding &lt;code&gt;flask&lt;/code&gt; into &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a directory for your project, navigate into it, then install lib &amp;amp; run flask project:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;mkdir&lt;/span&gt; my_flask_project
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; my_flask_project
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python app.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Open a web browser and navigate to &lt;code&gt;http://localhost:5000&lt;/code&gt; to see your Flask application in action.&lt;/p&gt;
&lt;p&gt;As you develop your application, continue to iterate on your codebase, adding features, fixing bugs, and refining your project structure as needed.&lt;/p&gt;
&lt;p&gt;But the main purpose of the article is about how to build and run a flask project on glitch, everything will be available in the following link for reference: &lt;a class=&#34;link&#34; href=&#34;https://www.geeksforgeeks.org/flask-tutorial/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.geeksforgeeks.org/flask-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;about-glitch&#34;&gt;About Glitch&lt;/h3&gt;
&lt;p&gt;Glitch is an application that allows developers to build projects publicly, supported from static web creation, front-end projects with Angular/React, or full-stack web with NodeJS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image.png&#34;
	width=&#34;279&#34;
	height=&#34;563&#34;
	srcset=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image_hu4eac7848f4007031ad9efc64160a92d5_28295_480x0_resize_box_3.png 480w, /p/how-to-build-deploy-flask-project-on-glitch/image_hu4eac7848f4007031ad9efc64160a92d5_28295_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;49&#34;
		data-flex-basis=&#34;118px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re a new user, figuring out how to implement a Flask project on Glitch might seem like a daunting task, especially since it&amp;rsquo;s not available as an option. This article aims to provide you with step-by-step instructions on how to do this.&lt;/p&gt;
&lt;h2 id=&#34;build--deploy-flask-on-glitch&#34;&gt;Build &amp;amp; Deploy Flask on Glitch&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-project&#34;&gt;Create a New Project&lt;/h3&gt;
&lt;p&gt;Visit Glitch.com and sign in or sign up for an account. Once logged in, click on &amp;ldquo;New Project&amp;rdquo; to create a new project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-1.png&#34;
	width=&#34;322&#34;
	height=&#34;665&#34;
	srcset=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-1_hu01e619be71d590db4d60b1cbf287c6e9_41940_480x0_resize_box_3.png 480w, /p/how-to-build-deploy-flask-project-on-glitch/image-1_hu01e619be71d590db4d60b1cbf287c6e9_41940_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;48&#34;
		data-flex-basis=&#34;116px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here, our focus will be on preparing the environment for the project. Select &lt;code&gt;glitch-hello-website&lt;/code&gt; to proceed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-2.png&#34;
	width=&#34;1728&#34;
	height=&#34;860&#34;
	srcset=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-2_hu67758c983c38d81ddf8312443197a65f_191575_480x0_resize_box_3.png 480w, /p/how-to-build-deploy-flask-project-on-glitch/image-2_hu67758c983c38d81ddf8312443197a65f_191575_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;482px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;structure-of-project&#34;&gt;Structure of project&lt;/h3&gt;
&lt;p&gt;After selecting &lt;code&gt;glitch-hello-website&lt;/code&gt; for the project, we now need to adjust the initial project structure to resemble that of a Flask project (&lt;a class=&#34;link&#34; href=&#34;#structure&#34; &gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-4.png&#34;
	width=&#34;264&#34;
	height=&#34;315&#34;
	srcset=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-4_hue2b97bbdcb84c108b0c6f68e835ae4ab_16944_480x0_resize_box_3.png 480w, /p/how-to-build-deploy-flask-project-on-glitch/image-4_hue2b97bbdcb84c108b0c6f68e835ae4ab_16944_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;83&#34;
		data-flex-basis=&#34;201px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;writing-the-flask-application&#34;&gt;Writing the Flask Application&lt;/h4&gt;
&lt;p&gt;In &lt;code&gt;app.py&lt;/code&gt; file, import Flask and create an instance of the Flask class. Define routes to handle different URLs and their corresponding functionality using route decorators. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;render_template&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;render_template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;creating-templates&#34;&gt;Creating Templates&lt;/h4&gt;
&lt;p&gt;Create HTML templates for different pages of this website inside a folder named templates. Flask uses Jinja2 templating engine, which allows us to inject Python code into your HTML templates. For example, create a file named &lt;code&gt;index.html&lt;/code&gt; inside the &lt;code&gt;templates&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Home Page&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Welcome to My Website!&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;This is the home page.&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Select the Terminal section at the bottom of the glitch page to switch to command processing. You can then run this project using the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python app.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You can view the process of your project:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-3.png&#34;
	width=&#34;763&#34;
	height=&#34;486&#34;
	srcset=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-3_hu6254f0ce86592db7d131dc9efb3897c5_51935_480x0_resize_box_3.png 480w, /p/how-to-build-deploy-flask-project-on-glitch/image-3_hu6254f0ce86592db7d131dc9efb3897c5_51935_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;376px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-5.png&#34;
	width=&#34;1735&#34;
	height=&#34;793&#34;
	srcset=&#34;/p/how-to-build-deploy-flask-project-on-glitch/image-5_hue619e92ae4b2d70dd5ba73386c79b72b_75043_480x0_resize_box_3.png 480w, /p/how-to-build-deploy-flask-project-on-glitch/image-5_hue619e92ae4b2d70dd5ba73386c79b72b_75043_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;218&#34;
		data-flex-basis=&#34;525px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;So, as of now, we can build a project using Flask on Glitch. How can we set it up to automatically deploy when we turn it off and access it again?&lt;/p&gt;
&lt;h3 id=&#34;automatically-deploy-flask&#34;&gt;Automatically deploy Flask&lt;/h3&gt;
&lt;h4 id=&#34;environment-variables&#34;&gt;Environment Variables&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;.env&lt;/code&gt; file is for storing secrets for your app, like an API key. Any project member can see the contents in the same way that you can, and everyone else can just see the variable names.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;GLITCH_DEBUGGER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# Scrubbed by Glitch 2024-03-27T17:24:18+0000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;sh-file&#34;&gt;SH File&lt;/h4&gt;
&lt;p&gt;An SH file is a script programmed for bash, a type of Unix shell (Bourne-Again Shell). It contains instructions written in the Bash language and can be executed by typing text commands within the shell&amp;rsquo;s command-line interface.&lt;/p&gt;
&lt;p&gt;Bcuz this mode of Glitch does not support Flask, we need to create an alternative, which is a &lt;a class=&#34;link&#34; href=&#34;start.sh&#34; &gt;virtual environment&lt;/a&gt; for Python.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -eu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PYTHONUNBUFFERED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;VIRTUALENV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;.data/venv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;nv&#34;&gt;$VIRTUALENV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  python3 -m venv &lt;span class=&#34;nv&#34;&gt;$VIRTUALENV&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;nv&#34;&gt;$VIRTUALENV&lt;/span&gt;/bin/pip &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$VIRTUALENV&lt;/span&gt;/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  curl --silent --show-error --retry &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; https://bootstrap.pypa.io/get-pip.py &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; python
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$VIRTUALENV&lt;/span&gt;/bin/pip3 install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$VIRTUALENV&lt;/span&gt;/bin/python3 app.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#!/bin/bash&lt;/code&gt; is called a shebang and specifies that the script should be executed using &lt;code&gt;/bin/bash&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set -eu&lt;/code&gt;: This line is to ensure that the script will stop immediately if there is an error &lt;code&gt;(-e)&lt;/code&gt; or variable is not defined &lt;code&gt;(-u)&lt;/code&gt;. This helps protect the program from unwanted errors.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export PYTHONUNBUFFERED=true&lt;/code&gt;: Set the &lt;code&gt;PYTHONUNBUFFERED&lt;/code&gt; environment variable so that Python does not buffer the output data. This can be useful in debugging or when running in a non-terminal environment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VIRTUALENV=.data/venv&lt;/code&gt;: Define the variable VIRTUALENV as the path to the virtual environment, in this code: &lt;code&gt;.data/venv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;if&lt;/code&gt; condition create a virtual directory &amp;amp; install pip&lt;/li&gt;
&lt;li&gt;The last 2 commands will install the lib in the &lt;code&gt;requirements.txt&lt;/code&gt; and deploy flask with &lt;code&gt;python app.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With python version 2.x, you can use this &lt;a class=&#34;link&#34; href=&#34;start_2x_python.sh&#34; &gt;sh file&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;By following the aforementioned steps, you can effortlessly develop and deploy a Flask application on Glitch. If you find this guide helpful, please consider sharing it with your friends.&lt;/p&gt;
&lt;p&gt;Buy me a coffee ☕: &lt;a class=&#34;link&#34; href=&#34;https://www.buymeacoffee.com/spid3r&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.buymeacoffee.com/spid3r&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thank you for visting!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Awesome Reverse Engineering</title>
        <link>/post/awesome_rev/</link>
        <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>/post/awesome_rev/</guid>
        <description>&lt;img src="/post/awesome_rev/featured.png" alt="Featured image of post Awesome Reverse Engineering" /&gt;&lt;p&gt;Thanks to Mr. Rc (HACKE-RC) for sharing knowledge about Reverse Engineering!&lt;/p&gt;
&lt;h2 id=&#34;reverse-engineering-resources&#34;&gt;Reverse Engineering Resources&lt;/h2&gt;
&lt;p&gt;Highest quality resources to learn Reverse Engineering from start to end! &lt;a class=&#34;link&#34; href=&#34;https://wiki.bi0s.in/reversing/roadmap&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;assembly&#34;&gt;Assembly&lt;/h2&gt;
&lt;h3 id=&#34;linux-specific&#34;&gt;Linux specific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://asmtutor.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://asmtutor.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.plantation-productions.com/Webster/www.artofasm.com/Linux/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.plantation-productions.com/Webster/www.artofasm.com/Linux/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;windows-specific&#34;&gt;Windows specific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.plantation-productions.com/Webster/www.artofasm.com/Windows/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.plantation-productions.com/Webster/www.artofasm.com/Windows/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sonictk.github.io/asm_tutorial/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://sonictk.github.io/asm_tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cpu.land&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn how CPUs work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.felixcloutier.com/x86/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.felixcloutier.com/x86/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cs.lmu.edu/~ray/notes/x86assembly/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cs.lmu.edu/~ray/notes/x86assembly/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://godbolt.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://godbolt.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://p.ost2.fyi/courses/course-v1:OpenSecurityTraining2&amp;#43;Arch1001_x86-64_Asm&amp;#43;2021_v1/about&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://p.ost2.fyi/courses/course-v1:OpenSecurityTraining2+Arch1001_x86-64_Asm+2021_v1/about&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assembly-projects&#34;&gt;Assembly Projects&lt;/h2&gt;
&lt;p&gt;After learning assembly, you can try some projects like making a bootloader or a whole simple Operating System.
I have wrote a blog on this topic, &lt;a class=&#34;link&#34; href=&#34;https://de-engineer.github.io/Understanding-booting-process-and-writing-own-os/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://brokenthorn.com/Resources/OSDev1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://brokenthorn.com/Resources/OSDev1.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;ttps://raw.githubusercontent.com/tuhdo/os01/master/Operating_Systems_From_0_to_1.pdf&#34; &gt;https://raw.githubusercontent.com/tuhdo/os01/master/Operating_Systems_From_0_to_1.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;operating-system-internals&#34;&gt;Operating System Internals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/playlist?list=PLmbPuZ0NsyGS8ef6zaHd2qYylzsHxL63x&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/playlist?list=PLmbPuZ0NsyGS8ef6zaHd2qYylzsHxL63x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/playlist?list=PLgre7dUq8DGKbtnlMuJPvPYlvLdXOC9uh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/playlist?list=PLgre7dUq8DGKbtnlMuJPvPYlvLdXOC9uh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pages.cs.wisc.edu/~remzi/OSTEP/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pages.cs.wisc.edu/~remzi/OSTEP/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.bi0s.in/reversing/roadmap&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Roadmap for RE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pwn.umasscybersec.org/lectures/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;COMPSCI 390R - Reverse Engineering &amp;amp; Vulnerability Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.begin.re/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.begin.re&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://artik.blue/reversing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://artik.blue/reversing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://legend.octopuslabs.io/sample-page.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://legend.octopuslabs.io/sample-page.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=mDyQBM-_T1g&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=mDyQBM-_T1g&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=gPsYkV7-yJk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=gPsYkV7-yJk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=d4Pgi5XML8E&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=d4Pgi5XML8E&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=9vKG8-TnawY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=9vKG8-TnawY&lt;/a&gt; (Recommended)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-your-hands-dirty&#34;&gt;Getting your hands dirty&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://crackmes.one/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://crackmes.one&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://reversing.kr/challenge.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://reversing.kr/challenge.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Maijin/radare2-workshop-2015/tree/master/IOLI-crackme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Maijin/radare2-workshop-2015/tree/master/IOLI-crackme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://reversing.kr/challenge.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://reversing.kr/challenge.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://0x00sec.org/t/challenge-collection-reverse-engineering-and-crackme/3027&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://0x00sec.org/t/challenge-collection-reverse-engineering-and-crackme/3027&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=n06QSoICU6c&amp;amp;list=PLt9cUwGw6CYG2DSfjXEE3GotkQDa5b-6s&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Youtube playlist on Malware Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://maxkersten.nl/binary-analysis-course/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Binary Analysis Free Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;deobfuscation&#34;&gt;Deobfuscation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.vadesecure.com/en/blog/malware-analysis-understanding-code-obfuscation-techniques&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.vadesecure.com/en/blog/malware-analysis-understanding-code-obfuscation-techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=bEsQ8UYioU4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=bEsQ8UYioU4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://0x00sec.org/t/packers-executable-compression-and-data-obfuscation/847&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://0x00sec.org/t/packers-executable-compression-and-data-obfuscation/847&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.blackhat.com/presentations/bh-usa-07/Yason/Whitepaper/bh-usa-07-yason-WP.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.blackhat.com/presentations/bh-usa-07/Yason/Whitepaper/bh-usa-07-yason-WP.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.varonis.com/blog/x64dbg-unpack-malware&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.varonis.com/blog/x64dbg-unpack-malware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://apr4h.github.io/2021-05-01-Manually-Unpacking-Remcos-Malware/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://apr4h.github.io/2021-05-01-Manually-Unpacking-Remcos-Malware/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=EdchPEHnohw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=EdchPEHnohw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/playlist?list=PLynb9SXC4yER8NinXJwV4GHUM9-jaIsN_&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/playlist?list=PLynb9SXC4yER8NinXJwV4GHUM9-jaIsN_&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;anti-debug-and-anti-analysis&#34;&gt;Anti-debug and Anti-analysis&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://iopscience.iop.org/article/10.1088/1742-6596/1744/4/042186/pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://iopscience.iop.org/article/10.1088/1742-6596/1744/4/042186/pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wikileaks.org/vault7/document/2015-07-PoC-Anti_Debugging_and_Anti_Emulation/2015-07-PoC-Anti_Debugging_and_Anti_Emulation.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wikileaks.org/vault7/document/2015-07-PoC-Anti_Debugging_and_Anti_Emulation/2015-07-PoC-Anti_Debugging_and_Anti_Emulation.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://anti-reversing.com/Downloads/Anti-Reversing/The_Ultimate_Anti-Reversing_Reference.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://anti-reversing.com/Downloads/Anti-Reversing/The_Ultimate_Anti-Reversing_Reference.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://anti-debug.checkpoint.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://anti-debug.checkpoint.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=WlE8abc8V-4&amp;amp;feature=emb_title&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=WlE8abc8V-4&amp;amp;feature=emb_title&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;anti-analysis&#34;&gt;Anti-analysis&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.malwarebytes.com/blog/news/2014/09/five-anti-debugging-tricks-that-sometimes-fool-analysts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.malwarebytes.com/blog/news/2014/09/five-anti-debugging-tricks-that-sometimes-fool-analysts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.oic-cert.org/en/download/Anti-Analysis%20techniques%20%28OIC%20Talk%29.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.oic-cert.org/en/download/Anti-Analysis techniques (OIC Talk).pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cynet.com/attack-techniques-hands-on/malware-anti-vm-techniques/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cynet.com/attack-techniques-hands-on/malware-anti-vm-techniques/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=5NO-W3SVjak&amp;amp;feature=emb_title&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=5NO-W3SVjak&amp;amp;feature=emb_title&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;c-reversing&#34;&gt;C++ Reversing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://alschwalm.com/blog/static/2016/12/17/reversing-c-virtual-functions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reversing C++ Virtual Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.blackhat.com/presentations/bh-dc-07/Sabanal_Yason/Paper/bh-dc-07-Sabanal_Yason-WP.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reversing C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows-research&#34;&gt;Windows Research&lt;/h2&gt;
&lt;p&gt;If you want to get into Windows Research, then you need to learn Windows Internals.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://de-engineer.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;My blog on Windows Internals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/sysinternals/resources/windows-internals&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Book on Windows Internals published by MS. Use it like a reference to learn about specific topics when needed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.pluralsight.com/authors/pavel-yosifovich&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Has the best video courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=4AkzIbmI3q4&amp;amp;feature=emb_title&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Process Internals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://samsclass.info/140/lec/Excerpted-PRE07_Solomon.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Internals Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://vimeo.com/49347561&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Intro to Windows Internals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://installsetupconfig.com/win32programming&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Win32 programming with code examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://caiorss.github.io/C-Cpp-Notes/WindowsAPI-cpp.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Notes for Windows API programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://undoc.airesoft.co.uk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows undocumented functions documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://geoffchappell.com/index.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows undocumented stuff&amp;rsquo;s documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/zodiacon/windowsinternals&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Internals Book 7th edition Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doxygen.reactos.org/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Full source code of ReactOS (open-source reimplementation of Windows)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://codemachine.com/articles/kernel_structures.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Explanation of key data structures used by device drivers, kernel, and HAL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.vergiliusproject.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Take a look at more than 6000 Windows Undocumented structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pastebin.com/NXxrYHp8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Resources For Advanced Windows Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://info-savvy.com/understanding-eprocess-structure/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Understanding the EPROCESS data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cs.miami.edu/home/burt/journal/NT/handle_table.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The NT Handle Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ntopcode.wordpress.com/2018/01/16/anatomy-of-the-thread-suspension-mechanism-in-windows-windows-internals/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anatomy of the thread suspension mechanism in Windows.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://terminus.rewolf.pl/terminus/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Automatically generated diff of Windows structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.i.u-tokyo.ac.jp/edu/training/ss/lecture/new-documents/Lectures/03-ThreadScheduling/ThreadScheduling.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Thread Scheduling Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://codemachine.com/articles/kernel_callback_functions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kernel Callback Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://likeagod.revers.engineering&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Decompilation of NT API functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;great-blogs-on-windows-internals&#34;&gt;Great blogs on Windows Internals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://secret.club/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://secret.club&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://t.co/TQttGxnkVF&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wumb0.in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://t.co/Rz220SAwbt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;voidsec.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://poppopret.blogspot.com/?m=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://poppopret.blogspot.com/?m=1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ragestorm.net/blogs/?cat=13&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.ragestorm.net/blogs/?cat=13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.x86matthew.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.x86matthew.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.tiraniddo.dev/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.tiraniddo.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://googleprojectzero.blogspot.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://googleprojectzero.blogspot.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;others&#34;&gt;Others&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://guidedhacking.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GuidedHacking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.msreverseengineering.com/blog/2014/6/23/compiler-optimizations-for-reverse-engineers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Compiler Optimizations for Reverse Engineers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://versprite.com/blog/security-research/reverse-engineering-undocumented-structures/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reversing Stories: Updating the Undocumented ESTROBJ and STROBJ Structures for Windows 10 x64.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://posts.specterops.io/methodology-for-static-reverse-engineering-of-windows-kernel-drivers-3115b2efed83&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Methodology for Static Reverse Engineering of Windows Kernel Drivers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://unit42.paloaltonetworks.com/what-i-learned-from-reverse-engineering-windows-containers/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What I Have Learned from Reverse Engineering Windows Containers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://alice.climent-pommeret.red/posts/a-syscall-journey-in-the-windows-kernel/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;A Syscall Journey in the Windows Kernel.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;symbolic-execution&#34;&gt;Symbolic Execution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=yRVZPvHYHzw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Video lecture on Symbolic Execution by MIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://pwn.umasscybersec.org/lectures/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Video lectures on Symbolic Execution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=kZd1Hi0ZBYc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Youtube video covering the basics of z3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ViRb3/z3-python-ctf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn z3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://p.ost2.fyi/courses/course-v1:OpenSecurityTraining2&amp;#43;RE3201_symexec&amp;#43;2021_V1/course&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Course on Symbolic Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sat-smt.codes/SAT_SMT_by_example.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://sat-smt.codes/SAT_SMT_by_example.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
